{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kuliah\\\\PemrogramanBerbasisFramework\\\\pertemuan-kelima\\\\tugas\\\\src\\\\container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../component/BlogPost/Post\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Komponen state dari React untuk statefull component\n      listArtikel: [],\n      // Variabel array yang digunakan untuk menyimpan data API\n      insertArtikel: {\n        NIM: \"\",\n        nama: \"\",\n        alamat: \"\",\n        hp: \"\",\n        angkatan: \"\",\n        status: \"\"\n      }\n    };\n\n    this.ambilDataDariServerAPI = () => {\n      fetch('http://localhost:3001/posts') // Alamat URL API yang ingin kita ambil datannya\n      .then(response => response.json()) // Ubah response data dari URL API menjadi sebuah data json\n      .then(jsonHasilAmbilDariAPI => {\n        // Data json hasil ambil cari API kita masukkan ke dalam listArtikel pada state\n        this.setState({\n          listArtikel: jsonHasilAmbilDariAPI\n        });\n      });\n    };\n\n    this.handleHapusArtikel = data => {\n      fetch(`http://localhost:3001/posts/${data}`, {\n        method: 'DELETE'\n      }).then(res => {\n        this.ambilDataDariServerAPI(console.log(this.ambilDataDariServerAPI));\n      });\n    };\n\n    this.handleTambahArtikel = event => {\n      let formInsertArtikel = { ...this.state.insertArtikel\n      };\n      let timestamp = new Date().getTime();\n      formInsertArtikel['id'] = timestamp;\n      formInsertArtikel[event.target.name] = event.target.value;\n      this.setState({\n        insertArtikel: formInsertArtikel\n      });\n    };\n\n    this.handleTombolSimpan = () => {\n      fetch('http://localhost:3001/posts', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.insertArtikel)\n      }).then(Response => {\n        this.ambilDataDariServerAPI();\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Komponen untuk mengecek ketika component telah di mounting, maka panggil API\n    this.ambilDataDariServerAPI(); // Ambil data dari server API lokal\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"post-artikel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form pb-2 border-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Judul\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      name: \"title\",\n      onChange: this.handleTambahArtikel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"body\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Isi\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"body\",\n      name: \"body\",\n      rows: \"3\",\n      onChange: this.handleTambahArtikel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleTombolSimpan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Simpan\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Daftar Artikel\"), this.state.listArtikel.map(artikel => {\n      // Looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\n      return React.createElement(Post, {\n        key: artikel.id,\n        judul: artikel.title,\n        isi: artikel.body,\n        idArtikel: artikel.id,\n        hapusArtikel: this.handleHapusArtikel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }); // Mappingkan data json dari API sesuai dengan kategorinya\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/Kuliah/PemrogramanBerbasisFramework/pertemuan-kelima/tugas/src/container/BlogPost/BlogPost.jsx"],"names":["React","Component","Post","BlogPost","state","listArtikel","insertArtikel","NIM","nama","alamat","hp","angkatan","status","ambilDataDariServerAPI","fetch","then","response","json","jsonHasilAmbilDariAPI","setState","handleHapusArtikel","data","method","res","console","log","handleTambahArtikel","event","formInsertArtikel","timestamp","Date","getTime","target","name","value","handleTombolSimpan","headers","body","JSON","stringify","Response","componentDidMount","render","map","artikel","id","title"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport './BlogPost.css';\r\nimport Post from \"../../component/BlogPost/Post\";\r\n\r\nclass BlogPost extends Component{\r\n    state = {               // Komponen state dari React untuk statefull component\r\n        listArtikel: [],     // Variabel array yang digunakan untuk menyimpan data API\r\n        insertArtikel: {\r\n            NIM: \"\",\r\n            nama: \"\",\r\n            alamat: \"\",\r\n            hp: \"\",\r\n            angkatan: \"\",\r\n            status: \"\"\r\n        }\r\n    }\r\n\r\n    ambilDataDariServerAPI = () => {\r\n        fetch('http://localhost:3001/posts')    // Alamat URL API yang ingin kita ambil datannya\r\n        .then(response => response.json())      // Ubah response data dari URL API menjadi sebuah data json\r\n        .then(jsonHasilAmbilDariAPI => {        // Data json hasil ambil cari API kita masukkan ke dalam listArtikel pada state\r\n            this.setState({\r\n                listArtikel: jsonHasilAmbilDariAPI\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){                    // Komponen untuk mengecek ketika component telah di mounting, maka panggil API\r\n        this.ambilDataDariServerAPI()       // Ambil data dari server API lokal\r\n    }\r\n\r\n    handleHapusArtikel = (data) => {\r\n        fetch(`http://localhost:3001/posts/${data}`, {method: 'DELETE'})\r\n        .then(res => {\r\n            this.ambilDataDariServerAPI(console.log(this.ambilDataDariServerAPI))\r\n        })\r\n    }\r\n\r\n    handleTambahArtikel = (event) => {\r\n        let formInsertArtikel = {...this.state.insertArtikel};\r\n        let timestamp = new Date().getTime();\r\n        formInsertArtikel['id'] = timestamp;\r\n        formInsertArtikel[event.target.name] = event.target.value;\r\n        this.setState({\r\n            insertArtikel: formInsertArtikel\r\n        })\r\n    }\r\n\r\n    handleTombolSimpan = () => {\r\n        fetch('http://localhost:3001/posts', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state.insertArtikel)\r\n        })\r\n            .then((Response) => {\r\n                this.ambilDataDariServerAPI();\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"post-artikel\">\r\n                <div className=\"form pb-2 border-bottom\">\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"title\" className=\"col-sm-2 col-form-label\">Judul</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" onChange={this.handleTambahArtikel}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"body\" className=\"col-sm-2 col-form-label\">Isi</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <textarea className=\"form-control\" id=\"body\" name=\"body\" rows=\"3\" onChange={this.handleTambahArtikel}></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\r\n                </div>\r\n                <h2>Daftar Artikel</h2>\r\n                {\r\n                    this.state.listArtikel.map(artikel => {     // Looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\r\n                        return <Post key={artikel.id} judul={artikel.title} isi={artikel.body} idArtikel={artikel.id} hapusArtikel={this.handleHapusArtikel}/>   // Mappingkan data json dari API sesuai dengan kategorinya\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}